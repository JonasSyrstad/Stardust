@model Stardust.Starterkit.Configuration.Repository.ServiceHostSettings

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>ServiceHostSettings</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ConfigSetNameId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConfigSetNameId)
            </dd>

        </dl>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 5, 500, new { htmlAttributes = new { @style = "", @class = "form-control text-box multi-line" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Visualization, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Visualization, new SelectList(ViewBag.Visializations,  Model.Visualization), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Visualization, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Level, new SelectList(ViewBag.Levels,"Id","Name", Model.Level), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>}
<h5>Parameters</h5>
@Html.Partial("Partials/ServiceHostParameterList",Model.Parameters)

<h5>Upstream hosts</h5>
@Html.ActionLink("Add", "AddUpstreamHost", new { id = Model.Id })
<table class="table table-striped table-hover table-condensed ">
    <thead>
        <tr>
            <th>Service host name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var s in Model.UpstreamHosts)
        {
            <tr>
                @*<td>@s.Name</td>*@
                <td>@Html.ActionLink(s.Name,"Details", new {id=s.Id})</td>
            </tr>
        }
    </tbody>
</table>

<h5>Downstream hosts</h5>
@Html.ActionLink("Add","AddDownstreamHost",new {id=Model.Id})
<table class="table table-striped table-hover table-condensed ">
    <thead>
        <tr>
            <th>Service host name</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var s in Model.DownstreamHosts)
        {
            <tr>
                <td>@Html.ActionLink(s.Name, "Details", new { id = s.Id })</td>
            </tr>
        }
    </tbody>
</table>
<h5>Services</h5>
<table class="table table-striped table-hover table-condensed ">
    <tr>
        <th style="width: 200px;">
            @Html.DisplayName("Name")
        </th>
        <th style="width: 200px;">
            @Html.DisplayName("ClientEndpoint")
        </th>
        <th>
            @Html.DisplayName("Endpoints")
        </th>
        <th></th>
    </tr>

    @foreach (var item in from m in Model.Services orderby m.Name ascending select m)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.ClientEndpoint))
                {
                    @Html.ActionLink(item.ClientEndpoint, "Details", "Endpoint", new { id = "edit", item = item.Id + "-" + item.ClientEndpoint }, null)
                }
            </td>
            <td>
                @string.Join("|", from i in item.Endpoints select i.Name)
            </td>
            <td>
                <span class="pull-right">
                    @Html.ActionLink("Details", "Details", "Service", new { id = "edit", item = item.Id }, null) |
                </span>
            </td>
        </tr>
    }

</table>

<p>
   @Html.ActionLink("Back", "Details", "ConfigSet", new { name = ViewBag.Name, system = ViewBag.System }, null)
</p>
