@model Stardust.Starterkit.Configuration.Web.Controllers.ReaderKey

@{
    ViewBag.Title = "ReaderKey";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ReaderKey</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>ReaderKey</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Key, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-1 text-nowrap" style="align-items: baseline">
                <input type="text" id="key" class="input input-sm" readonly="readonly" value="@Model.Key" style="width: 500px; max-width: 500px; " />
                <button class="btn btn-sm" id="cpy"  data-clipboard-target="#key" title="Copy to clipboard" type="button">
                    <i class="glyphicon glyphicon-magnet"></i>
                </button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AllowMaster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AllowMaster)
                    @Html.ValidationMessageFor(model => model.AllowMaster, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AllowUserTokens, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AllowUserTokens)
                    @Html.ValidationMessageFor(model => model.AllowUserTokens, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GenerateNew, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.GenerateNew)
                    @Html.ValidationMessageFor(model => model.GenerateNew, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Details", "ConfigSet", new { name = ViewBag.Name, system = ViewBag.System }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script language="javascript" type="text/javascript">
    var c = new Clipboard('#cpy');
    c.on('success', function(e) {
        console.info('Action:', e.action);
        console.info('Text:', e.text);
        console.info('Trigger:', e.trigger);
        console.info('Target:', e.target);
        e.trigger.title = "Copied";
        var sel = window.getSelection ? window.getSelection() : document.selection;
        alert("Key copied to clipboard");
        if (sel) {
            if (sel.removeAllRanges) {
                sel.removeAllRanges();
            } else if (sel.empty) {
                sel.empty();
            }
        }
        
    });
</script>
}
